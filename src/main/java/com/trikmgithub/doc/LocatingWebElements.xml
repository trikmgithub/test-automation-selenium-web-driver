<?xml version="1.0" encoding="UTF-8"?>
<!--
Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
Click nbfs://nbhost/SystemFileSystem/Templates/XML/XMLDocument.xml to edit this template
-->



<root>
    <title>2. Locating Web Elements</title>
    <!--
        ***** Locator strategies *****
        Document Object Model (DOM)
            * Defines how to access and manipulate the structure of HTML
        Locator
            * ID
            * Name
            * Class name
            * Tag name
            * Link text
            * Css selector
            * XPath
        Choosing the right locator
            1. Use id whenever possible
                <input type="text" id="username" placeholder="Enter username">
                WebElement userField = driver.findElement(By.id("username"));
                userField.sendKeys("admin");
                üëâ N√™n d√πng id ƒë·∫ßu ti√™n n·∫øu c√≥, v√¨ tr√¨nh duy·ªát t·ªëi ∆∞u h√≥a t√¨m ki·∫øm theo ID.
            2. Use name when no id
                <input type="password" name="password">
                WebElement passField = driver.findElement(By.name("password"));
                passField.sendKeys("123456");
                ‚ö†Ô∏è D√πng khi id kh√¥ng t·ªìn t·∫°i.
                N·∫øu c√≥ nhi·ªÅu ph·∫ßn t·ª≠ c√πng name, Selenium s·∫Ω ch·ªçn ph·∫ßn t·ª≠ ƒë·∫ßu ti√™n.
            3. Use class when no id or name
                <button class="login-btn primary">Login</button>
                WebElement loginButton = driver.findElement(By.className("login-btn"));
                loginButton.click();
                ‚ö†Ô∏è By.className ch·ªâ nh·∫≠n m·ªôt class duy nh·∫•t ‚Äî n·∫øu trong HTML c√≥ "login-btn primary", 
                b·∫°n ch·ªâ d√πng ƒë∆∞·ª£c m·ªôt (login-btn ho·∫∑c primary), kh√¥ng ph·∫£i c·∫£ chu·ªói.
            4. Use Css selector and/or Xpath for advanced locators
                <div class="form">
                    <input type="email" placeholder="Email address">
                </div>
                WebElement emailField = driver.findElement(By.cssSelector("div.form input[type='email']"));
                emailField.sendKeys("test@gmail.com");
                
                <button type="submit">Login</button>
                WebElement loginBtn = driver.findElement(By.xpath("//button[text()='Login']"));
                loginBtn.click();
                
                üí° D√πng CSS v√† XPath khi ph·∫ßn t·ª≠ kh√¥ng c√≥ thu·ªôc t√≠nh r√µ r√†ng, 
                ho·∫∑c c·∫ßn x√°c ƒë·ªãnh v·ªã tr√≠ d·ª±a v√†o quan h·ªá cha-con, text, ho·∫∑c index.
            5. Use tag name to locate multiple elements
                <ul>
                    <li>Home</li>
                    <li>About</li>
                    <li>Contact</li>
                </ul>
                List<WebElement> items = driver.findElements(By.tagName("li"));
                for (WebElement item : items) {
                    System.out.println(item.getText());
                }
                
                üëâ Tr·∫£ v·ªÅ danh s√°ch (List<WebElement>), kh√¥ng ph·∫£i ch·ªâ m·ªôt ph·∫ßn t·ª≠.
            6. Use link text for anchor elements with no other attributes.
                <a href="/logout">Logout</a>
                WebElement logoutLink = driver.findElement(By.linkText("Logout"));
                logoutLink.click();
                
                üí° Ngo√†i ra, c√≥ th·ªÉ d√πng By.partialLinkText("Log") n·∫øu ch·ªâ nh·ªõ m·ªôt ph·∫ßn c·ªßa text.

        ***** Relative locator *****
        Relative locator: near, above, left, below, right
        Ch√∫ √Ω: n√≥ c√≥ th·ªÉ s·∫Ω kh√¥ng ƒë√∫ng khi responve: web, mobile
    -->
</root>

